{"version":3,"sources":["redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-slice.js","Components/Navigation/Navigation.js","Components/UserMenu/UserMenu.js","Components/AuthNav.js","Components/AppBar.js","Components/PrivateRoute.js","Components/PublicRoute.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","redux/contacts/contacts-actions.js"],"names":["axios","defaults","baseURL","token","set","headers","common","Authorization","unset","register","createAsyncThunk","credentials","a","console","log","post","data","logIn","operations","logOut","fetchCurrentUser","_","thunkAPI","state","getState","persistedToken","auth","rejectWithValue","get","authSelectors","getIsLoggedIn","isLoggedIn","getUsername","user","name","getUseremail","email","getIsFetchingCurrent","isFetchingCurrentUser","authSlice","createSlice","initialState","extraReducers","authOperations","fulfilled","action","payload","pending","rejected","Navigation","useSelector","className","exact","to","activeClassName","useStyles","makeStyles","theme","margin","spacing","extendedIcon","marginRight","UserMenu","dispatch","useDispatch","classes","Button","variant","size","color","type","onClick","AuthNav","styles","header","display","justifyContent","alignItems","borderBottom","AppBar","style","PrivateRoute","children","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","Container","CssBaseline","Typography","component","backgroundColor","height","autoClose","position","width","fallback","path","itemsReducer","createReducer","fetchContactsSuccess","addContactSuccess","deleteContactSuccess","filter","contact","id","loading","addContactRequest","addContactError","fetchContactsRequest","fetchContactsError","deleteContactRequest","deleteContactError","filterReducer","combineReducers","items","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById","createAction"],"mappings":"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","file":"static/js/main.8cb59d2d.chunk.js","sourcesContent":["import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = token;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = createAsyncThunk('auth/register', async credentials => {\n  console.log(credentials);\n  try {\n    const { data } = await axios.post('/users/signup', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) { \n  }\n});\n\nconst logIn = createAsyncThunk('auth/login', async credentials => {\n  try {\n    const { data } = await axios.post('/users/login', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n  }\n});\n\nconst logOut = createAsyncThunk('auth/logout', async () => {\n  try {\n    await axios.post('/users/logout', token);\n    token.unset();\n  \n  } catch (error) {\n  }\n});\nconst fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      console.log('Токена нет, уходим из fetchCurrentUser');\n      return thunkAPI.rejectWithValue();\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (error) {\n     \n    }\n  },\n);\n\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\nexport default operations;\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\n\nconst getUsername = state => state.auth.user.name;\nconst getUseremail = state => state.auth.user.email;\nconst getIsFetchingCurrent = state => state.auth.isFetchingCurrentUser;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUsername,\n  getUseremail,\n  getIsFetchingCurrent\n};\nexport default authSelectors;\n","import { createSlice } from '@reduxjs/toolkit';\nimport authOperations from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isFetchingCurrentUser: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logOut.fulfilled](state, action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.fetchCurrentUser.pending](state) {\n      state.isFetchingCurrentUser = true;\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isFetchingCurrentUser = false;\n    },\n    [authOperations.fetchCurrentUser.rejected](state) {\n      state.isFetchingCurrentUser = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport './Navigation.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\nconst Navigation = () => {\r\n     const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n     return ( <nav className='Navigation'>\r\n                <NavLink exact to='/' className='navLink' activeClassName='navLinkActive'>Главная</NavLink>\r\n                {isLoggedIn && <NavLink to='/contacts' className='navLink' activeClassName='navLinkActive'>Контакты</NavLink>}\r\n              </nav >\r\n            );\r\n};\r\n\r\nexport default Navigation;","import { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport '../Navigation/Navigation.css';\n\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const email = useSelector(authSelectors.getUseremail);\n  const classes = useStyles();\n\n\n  return (\n    <div >\n      <span className='navLink'>Добро пожаловать, {email}</span>\n      <Button variant=\"contained\" size=\"medium\" color=\"primary\" className={classes.margin} type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\n          Выйти\n        </Button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Navigation/Navigation.css';\n\nexport default function AuthNav() {\n  return (\n    <div>\n      <NavLink\n        to=\"/register\"\n        exact\n        className='navLink'\n        activeClassName='navLinkActive'\n      >\n        Регистрация\n      </NavLink>\n      <NavLink\n        to=\"/login\"\n        exact\n        className='navLink'\n        activeClassName='navLinkActive'\n      >\n        Логин\n      </NavLink>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport Navigation from './Navigation';\nimport UserMenu from './UserMenu';\n import AuthNav from './AuthNav';\nimport { authSelectors } from '../redux/auth';\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: '1px solid #2A363B',\n  },\n};\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <header style={styles.header}>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n}","import './App.css';\nimport { useEffect, lazy, Suspense  } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch } from 'react-router-dom';\n\nimport AppBar from './Components/AppBar';\nimport { authOperations, authSelectors } from './redux/auth';\nimport PrivateRoute from './Components/PrivateRoute';\nimport PublicRoute from './Components/PublicRoute';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nconst HomeView = lazy(() => import('./views/HomeView.js'));\nconst RegisterView = lazy(() => import('./views/RegisterView.js'));\nconst LoginView = lazy(() => import('./views/LoginView.js'));\nconst ContactsView = lazy(() => import('./views/ContactsView.js'));\n \nexport default function App() {\n  const dispatch = useDispatch();\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n  return (\n    \n    <Container >\n      <CssBaseline />\n      <Typography component=\"div\" style={{ backgroundColor: '#cfe8fc', height: '100vh' }} >\n      \n      <ToastContainer\n           autoClose={3000}\n           position=\"top-center\"\n          />\n      <AppBar />\n      {isFetchingCurrentUser ? (\n      <Loader\n                     type=\"ThreeDots\"\n                     color=\"#3f51b5\"\n                     height={100}\n                     width={100}\n                    />\n    ) : (\n      \n      <Suspense fallback={<Loader\n                     type=\"ThreeDots\"\n                     color=\"#3f51b5\"\n                     height={100}\n                     width={100}\n                    />}>\n      <Switch>\n        <PublicRoute exact path=\"/\">\n          <HomeView />\n        </PublicRoute>\n        <PublicRoute exact path=\"/register\" restricted>\n          <RegisterView />\n        </PublicRoute>\n        <PublicRoute exact path=\"/login\" redirectTo=\"/contacts\" restricted>\n          <LoginView />\n        </PublicRoute>\n        <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n          <ContactsView />\n        </PrivateRoute>\n      </Switch>\n          </Suspense>)}\n      </Typography>\n    </Container>\n       \n    );\n};\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {addContactRequest,addContactSuccess, addContactError ,deleteContactError,deleteContactRequest,deleteContactSuccess, filter,fetchContactsError,fetchContactsRequest ,fetchContactsSuccess} from './contacts-actions';\r\n\r\nconst initialState = [];\r\nconst itemsReducer = createReducer(initialState, {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) => {\r\n    const contacts = state.filter(contact => contact.id !== payload);\r\n    return contacts;\r\n  }\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  \r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n    [fetchContactsError]: () => false,\r\n   [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n \r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n    [filter]: (state, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n    items: itemsReducer,\r\n    filter: filterReducer,\r\n    loading,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\n//import { todosReducer } from './todos';\nimport { authReducer } from './auth';\nimport logger from 'redux-logger';\n\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }), logger\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n     contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { store, persistor } from './redux/store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const filter = createAction('FILTER');\r\n\r\nexport const addContactRequest = createAction('ADD_REQUEST');\r\nexport const addContactSuccess = createAction('ADD_SUCCESS');\r\nexport const addContactError = createAction('ADD_ERROR');\r\n\r\nexport const deleteContactRequest = createAction('DELETE_REQUEST');\r\nexport const deleteContactSuccess = createAction('DELETE_SUCCESS');\r\nexport const deleteContactError = createAction('DELETE_ERROR');\r\n\r\nexport const fetchContactsRequest = createAction('FETCH_REQUEST');\r\nexport const fetchContactsSuccess = createAction('FETCH_SUCCESS');\r\nexport const fetchContactsError = createAction('FETCH_ERROR');\r\n"],"sourceRoot":""}